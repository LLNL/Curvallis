[general]
#Have the original points in the background so we can compare as we change points
background_file: 1dexample1.dat
# curve_output_file_name: filename.dat
# use_eos_info_file: True
# eos_function: Ec

[inputs]
#in_eos_file_base: 2dexample1.dat

# Read in a 1d data file. This is two column data plotted as a
# single line. By default a 5th degree polynomial will be fitted
# to this data and displayed as a red line. This command is the 
# simplest possible config file.
input_file: 1dexample1.dat


# parabola_in
# predefined_in

[outputs]
# out_eos_file_base: 2dDataOut.dat
# output_file_name: 1dDataOut.dat

[regions]
# do_derivative
# do_integral
# points_in_fit_curve: 200
# points_in_user_curve: 50
# region_bound [10, 20, 100]
# overlap 5

[Shifts, Limits, and Point Exclusion]
# decimate: 20
# step: 3
# x_include: [1, 30]
# x_scale: [2, 0, 100]
# x_shift: [50, 0, 100]
# y_include: [0, 300]
# y_scale: [2, 0, 100]
# y_shift: [50, 0, 100]
# t_include: [0, 20000]
# v_axis

[view]
#x_max: 100
#x_min: 10
#y_max: 200
#y_min: 0

[fitter]
# fit_type: [none, poly3, vinet]
# refine_fit: [none, none, poly5]
# scale_derivative_by: 100
# scale_integral_by: .001
# xref: 6.7
# y_axis: E
# yref: 5.4

# rho0_guess: 3.4
# delta_p_guess: 3.6
# k0_guess: 3.6
# k0_prime_guess: 4.0
# k0_prime_prime_guess: 1.1
# lam_guess: 3.4
# e0_guess: 30.6

[automatic smoothing]
# numpoints: 4
# repeat: 5
# matchpt: 1.0
# interp: cubic
# angle 50

###############################################################################

# This is a configuration file for curve_editor.py.  This file is parsed with 
# configargparse.  Some format details:

# in any column starts a comment 
; in any column also starts a comment (.ini style)
--- in the FIRST column starts a comment (.yaml style)

# These all set 'name' to value. 'name' is the command-line option, without the
# leading '--'.  The key is case sensitive: "Name" is not "name":
# name value
# name = value   # (.ini style)  (white space is ignored, so name = value same as name=value)
# name: value    # (yaml style)
# --name value   # (argparse style)

# These all set name to True. '=', ':', and '--' work similarly:
# --name
# name    
# name True
# name true

# To specify an argument with multiple values:
# NOT!
# To specify an argument with a type of 'list':
# fruit = [apple, orange, lemon]
# indexes = [1, 12, 35 , 40]

[section]      # .ini-style section names are treated as comments

